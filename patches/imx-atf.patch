diff --git a/plat/imx/common/imx_uart_console.S b/plat/imx/common/imx_uart_console.S
index 96cb06a70..cd19dc4c2 100644
--- a/plat/imx/common/imx_uart_console.S
+++ b/plat/imx/common/imx_uart_console.S
@@ -44,20 +44,7 @@ register_fail:
 endfunc console_imx_uart_register
 
 func console_imx_uart_init
-	mov     w5, #FCR
-	str     w5, [x0, #0x90]
-	mov     w5, #BIR
-	str     w5, [x0, #0xa4]
-	mov     w5, #BMR
-	str     w5, [x0, #0xa8]
-	mov     w5, #CR2
-	str     w5, [x0, #0x84]
-	mov     w5, #CR1
-	str     w5, [x0, #0x80]
-
-	ldr     w5, [x0, #0x88]
-	orr     x5, x5, #0x4
-	str     w5, [x0, #0x88]
+	mov     w0, #1
 	ret
 endfunc console_imx_uart_init
 
diff --git a/plat/imx/imx8m/imx8mm/imx8mm_bl31_setup.c b/plat/imx/imx8m/imx8mm/imx8mm_bl31_setup.c
index b2e9d10ae..33793e91c 100644
--- a/plat/imx/imx8m/imx8mm/imx8mm_bl31_setup.c
+++ b/plat/imx/imx8m/imx8mm/imx8mm_bl31_setup.c
@@ -116,7 +116,11 @@ static const struct imx_rdc_cfg rdc[] = {
 	RDC_MDAn(RDC_MDA_M4, DID1),
 
 	/* peripherals domain permission */
+#ifdef WINDOWS_BSP
+	RDC_PDAPn(RDC_PDAP_UART4, D0R | D0W),
+#else
 	RDC_PDAPn(RDC_PDAP_UART4, D1R | D1W),
+#endif
 	RDC_PDAPn(RDC_PDAP_UART2, D0R | D0W),
 	RDC_PDAPn(RDC_PDAP_UART1, D0R | D0W),
 
diff --git a/plat/imx/imx8m/imx8mm/platform.mk b/plat/imx/imx8m/imx8mm/platform.mk
index 8cfcc007e..a2ecdf4bf 100644
--- a/plat/imx/imx8m/imx8mm/platform.mk
+++ b/plat/imx/imx8m/imx8mm/platform.mk
@@ -152,6 +152,12 @@ ERRATA_A53_835769	:=	1
 ERRATA_A53_843419	:=	1
 ERRATA_A53_855873	:=	1
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
 BL32_BASE		?=	0xbe000000
 $(eval $(call add_define,BL32_BASE))
 
diff --git a/plat/imx/imx8m/imx8mn/imx8mn_bl31_setup.c b/plat/imx/imx8m/imx8mn/imx8mn_bl31_setup.c
index 1c03ed16c..74b6b539d 100644
--- a/plat/imx/imx8m/imx8mn/imx8mn_bl31_setup.c
+++ b/plat/imx/imx8m/imx8mn/imx8mn_bl31_setup.c
@@ -108,7 +108,11 @@ static const struct imx_rdc_cfg rdc[] = {
 	RDC_MDAn(RDC_MDA_M7, DID1),
 
 	/* peripherals domain permission */
+#ifdef WINDOWS_BSP
+	RDC_PDAPn(RDC_PDAP_UART4, D0R | D0W),
+#else
 	RDC_PDAPn(RDC_PDAP_UART4, D1R | D1W),
+#endif
 	RDC_PDAPn(RDC_PDAP_UART2, D0R | D0W),
 	RDC_PDAPn(RDC_PDAP_RDC, D0R | D0W | D1R),
 
diff --git a/plat/imx/imx8m/imx8mn/platform.mk b/plat/imx/imx8m/imx8mn/platform.mk
index b838c6720..66e8c9e66 100644
--- a/plat/imx/imx8m/imx8mn/platform.mk
+++ b/plat/imx/imx8m/imx8mn/platform.mk
@@ -58,7 +58,18 @@ ERRATA_A53_835769	:=	1
 ERRATA_A53_843419	:=	1
 ERRATA_A53_855873	:=	1
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+BL32_BASE		?=	0xbe000000
+else
 BL32_BASE		?=	0x56000000
+endif
+
 $(eval $(call add_define,BL32_BASE))
 
 BL32_SIZE		?=	0x2000000
diff --git a/plat/imx/imx8m/imx8mp/include/platform_def.h b/plat/imx/imx8m/imx8mp/include/platform_def.h
index 46862f732..83aa86e26 100644
--- a/plat/imx/imx8m/imx8mp/include/platform_def.h
+++ b/plat/imx/imx8m/imx8mp/include/platform_def.h
@@ -87,7 +87,11 @@
 #define IMX_BOOT_UART_CLK_IN_HZ		24000000 /* Select 24MHz oscillator */
 #define PLAT_CRASH_UART_BASE		IMX_BOOT_UART_BASE
 #define PLAT_CRASH_UART_CLK_IN_HZ	24000000
+#ifdef WINDOWS_BSP
+#define IMX_CONSOLE_BAUDRATE		921600
+#else
 #define IMX_CONSOLE_BAUDRATE		115200
+#endif
 
 #define IMX_AIPSTZ1			U(0x301f0000)
 #define IMX_AIPSTZ2			U(0x305f0000)
diff --git a/plat/imx/imx8m/imx8mp/platform.mk b/plat/imx/imx8m/imx8mp/platform.mk
index b473e547f..ebc95135c 100644
--- a/plat/imx/imx8m/imx8mp/platform.mk
+++ b/plat/imx/imx8m/imx8mp/platform.mk
@@ -149,7 +149,17 @@ ERRATA_A53_835769	:=	1
 ERRATA_A53_843419	:=	1
 ERRATA_A53_855873	:=	1
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+BL32_BASE		?=	0xfe000000
+else
 BL32_BASE		?=	0x56000000
+endif
 $(eval $(call add_define,BL32_BASE))
 
 BL32_SIZE		?=	0x2000000
diff --git a/plat/imx/imx8m/imx8mq/platform.mk b/plat/imx/imx8m/imx8mq/platform.mk
index 5af2308af..765ec3593 100644
--- a/plat/imx/imx8m/imx8mq/platform.mk
+++ b/plat/imx/imx8m/imx8mq/platform.mk
@@ -80,6 +80,12 @@ ERRATA_A53_835769	:=	1
 ERRATA_A53_843419	:=	1
 ERRATA_A53_855873	:=	1
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
 BL32_BASE		?=	0xfe000000
 $(eval $(call add_define,BL32_BASE))
 
diff --git a/plat/imx/imx8qx/platform.mk b/plat/imx/imx8qx/platform.mk
index c2dcb8bd9..097a4f82c 100644
--- a/plat/imx/imx8qx/platform.mk
+++ b/plat/imx/imx8qx/platform.mk
@@ -46,6 +46,12 @@ $(eval $(call add_define,ENABLE_CPU_DYNAMIC_RETENTION))
 ENABLE_L2_DYNAMIC_RETENTION := 1
 $(eval $(call add_define,ENABLE_L2_DYNAMIC_RETENTION))
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
 ifeq (${PLAT},imx8dx)
 BL32_BASE		?=	0x96000000
 else
diff --git a/plat/imx/imx93/include/platform_def.h b/plat/imx/imx93/include/platform_def.h
index 9bbee908f..755650dba 100644
--- a/plat/imx/imx93/include/platform_def.h
+++ b/plat/imx/imx93/include/platform_def.h
@@ -43,7 +43,11 @@
 
 /* non-secure uboot base */
 /* TODO */
+#ifdef WINDOWS_BSP
+#define PLAT_NS_IMAGE_OFFSET		U(0x82200000)
+#else
 #define PLAT_NS_IMAGE_OFFSET		U(0x80200000)
+#endif
 #define BL32_FDT_OVERLAY_ADDR           (PLAT_NS_IMAGE_OFFSET + 0x3000000)
 
 /* GICv4 base address */
@@ -63,7 +67,11 @@
 
 #define IMX_LPUART_BASE			0x44380000
 #define IMX_BOOT_UART_CLK_IN_HZ		24000000 /* Select 24MHz oscillator */
+#ifdef WINDOWS_BSP
+#define IMX_CONSOLE_BAUDRATE		921600
+#else
 #define IMX_CONSOLE_BAUDRATE		115200
+#endif
 
 #define AIPSx_SIZE			U(0x800000)
 #define AIPS1_BASE			U(0x44000000)
diff --git a/plat/imx/imx93/platform.mk b/plat/imx/imx93/platform.mk
index be09b9f0b..608a32f93 100644
--- a/plat/imx/imx93/platform.mk
+++ b/plat/imx/imx93/platform.mk
@@ -53,7 +53,18 @@ USE_COHERENT_MEM	:=	0
 PROGRAMMABLE_RESET_ADDRESS := 1
 COLD_BOOT_SINGLE_CPU := 1
 
+WINDOWS_BSP ?= n
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+CFLAGS+=-DWINDOWS_BSP
+endif
+
+ifneq (,$(filter $(WINDOWS_BSP),y))
+BL32_BASE               ?=      0x80200000
+else
 BL32_BASE               ?=      0x96000000
+endif
+
 BL32_SIZE               ?=      0x02000000
 $(eval $(call add_define,BL32_BASE))
 $(eval $(call add_define,BL32_SIZE))
